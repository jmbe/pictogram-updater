//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="WebServiceEndpointBinding", Namespace="http://www.pictosys.com/WebService")]
public partial class PictosysWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback downloadAnimationOperationCompleted;
    
    private System.Threading.SendOrPostCallback downloadEMFOperationCompleted;
    
    private System.Threading.SendOrPostCallback downloadEPSOperationCompleted;
    
    private System.Threading.SendOrPostCallback downloadJPEGOperationCompleted;
    
    private System.Threading.SendOrPostCallback downloadSVGOperationCompleted;
    
    private System.Threading.SendOrPostCallback downloadSoundOperationCompleted;
    
    private System.Threading.SendOrPostCallback downloadWMFOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAvailableAnimationsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAvailableLocalesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAvailableSoundsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAvailableSoundsByLocaleOperationCompleted;
    
    private System.Threading.SendOrPostCallback getEnglishLanguageNamesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getJpegUrlOperationCompleted;
    
    private System.Threading.SendOrPostCallback getJpegUrlsByLocaleOperationCompleted;
    
    private System.Threading.SendOrPostCallback getNativeLanguageNamesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getPictogramNamesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getPictogramPhrasesByLocaleOperationCompleted;
    
    private System.Threading.SendOrPostCallback getSwedishLanguageNamesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getSwedishLanguageNames2OperationCompleted;
    
    private System.Threading.SendOrPostCallback verifyLoginOperationCompleted;
    
    /// <remarks/>
    public PictosysWebService() {
        this.Url = "http://pictosys.com:8080/pictosys/pictosys-ejb/WebServiceEndpoint";
    }
    
    /// <remarks/>
    public event downloadAnimationCompletedEventHandler downloadAnimationCompleted;
    
    /// <remarks/>
    public event downloadEMFCompletedEventHandler downloadEMFCompleted;
    
    /// <remarks/>
    public event downloadEPSCompletedEventHandler downloadEPSCompleted;
    
    /// <remarks/>
    public event downloadJPEGCompletedEventHandler downloadJPEGCompleted;
    
    /// <remarks/>
    public event downloadSVGCompletedEventHandler downloadSVGCompleted;
    
    /// <remarks/>
    public event downloadSoundCompletedEventHandler downloadSoundCompleted;
    
    /// <remarks/>
    public event downloadWMFCompletedEventHandler downloadWMFCompleted;
    
    /// <remarks/>
    public event getAvailableAnimationsCompletedEventHandler getAvailableAnimationsCompleted;
    
    /// <remarks/>
    public event getAvailableLocalesCompletedEventHandler getAvailableLocalesCompleted;
    
    /// <remarks/>
    public event getAvailableSoundsCompletedEventHandler getAvailableSoundsCompleted;
    
    /// <remarks/>
    public event getAvailableSoundsByLocaleCompletedEventHandler getAvailableSoundsByLocaleCompleted;
    
    /// <remarks/>
    public event getEnglishLanguageNamesCompletedEventHandler getEnglishLanguageNamesCompleted;
    
    /// <remarks/>
    public event getJpegUrlCompletedEventHandler getJpegUrlCompleted;
    
    /// <remarks/>
    public event getJpegUrlsByLocaleCompletedEventHandler getJpegUrlsByLocaleCompleted;
    
    /// <remarks/>
    public event getNativeLanguageNamesCompletedEventHandler getNativeLanguageNamesCompleted;
    
    /// <remarks/>
    public event getPictogramNamesCompletedEventHandler getPictogramNamesCompleted;
    
    /// <remarks/>
    public event getPictogramPhrasesByLocaleCompletedEventHandler getPictogramPhrasesByLocaleCompleted;
    
    /// <remarks/>
    public event getSwedishLanguageNamesCompletedEventHandler getSwedishLanguageNamesCompleted;
    
    /// <remarks/>
    public event getSwedishLanguageNames2CompletedEventHandler getSwedishLanguageNames2Completed;
    
    /// <remarks/>
    public event verifyLoginCompletedEventHandler verifyLoginCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result", DataType="base64Binary")]
    public byte[] downloadAnimation(string String_1, string String_2, string String_3) {
        object[] results = this.Invoke("downloadAnimation", new object[] {
                    String_1,
                    String_2,
                    String_3});
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindownloadAnimation(string String_1, string String_2, string String_3, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("downloadAnimation", new object[] {
                    String_1,
                    String_2,
                    String_3}, callback, asyncState);
    }
    
    /// <remarks/>
    public byte[] EnddownloadAnimation(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public void downloadAnimationAsync(string String_1, string String_2, string String_3) {
        this.downloadAnimationAsync(String_1, String_2, String_3, null);
    }
    
    /// <remarks/>
    public void downloadAnimationAsync(string String_1, string String_2, string String_3, object userState) {
        if ((this.downloadAnimationOperationCompleted == null)) {
            this.downloadAnimationOperationCompleted = new System.Threading.SendOrPostCallback(this.OndownloadAnimationOperationCompleted);
        }
        this.InvokeAsync("downloadAnimation", new object[] {
                    String_1,
                    String_2,
                    String_3}, this.downloadAnimationOperationCompleted, userState);
    }
    
    private void OndownloadAnimationOperationCompleted(object arg) {
        if ((this.downloadAnimationCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.downloadAnimationCompleted(this, new downloadAnimationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result", DataType="base64Binary")]
    public byte[] downloadEMF(string String_1, string String_2, string String_3, string String_4) {
        object[] results = this.Invoke("downloadEMF", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4});
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindownloadEMF(string String_1, string String_2, string String_3, string String_4, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("downloadEMF", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4}, callback, asyncState);
    }
    
    /// <remarks/>
    public byte[] EnddownloadEMF(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public void downloadEMFAsync(string String_1, string String_2, string String_3, string String_4) {
        this.downloadEMFAsync(String_1, String_2, String_3, String_4, null);
    }
    
    /// <remarks/>
    public void downloadEMFAsync(string String_1, string String_2, string String_3, string String_4, object userState) {
        if ((this.downloadEMFOperationCompleted == null)) {
            this.downloadEMFOperationCompleted = new System.Threading.SendOrPostCallback(this.OndownloadEMFOperationCompleted);
        }
        this.InvokeAsync("downloadEMF", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4}, this.downloadEMFOperationCompleted, userState);
    }
    
    private void OndownloadEMFOperationCompleted(object arg) {
        if ((this.downloadEMFCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.downloadEMFCompleted(this, new downloadEMFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result", DataType="base64Binary")]
    public byte[] downloadEPS(string String_1, string String_2, string String_3, string String_4) {
        object[] results = this.Invoke("downloadEPS", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4});
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindownloadEPS(string String_1, string String_2, string String_3, string String_4, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("downloadEPS", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4}, callback, asyncState);
    }
    
    /// <remarks/>
    public byte[] EnddownloadEPS(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public void downloadEPSAsync(string String_1, string String_2, string String_3, string String_4) {
        this.downloadEPSAsync(String_1, String_2, String_3, String_4, null);
    }
    
    /// <remarks/>
    public void downloadEPSAsync(string String_1, string String_2, string String_3, string String_4, object userState) {
        if ((this.downloadEPSOperationCompleted == null)) {
            this.downloadEPSOperationCompleted = new System.Threading.SendOrPostCallback(this.OndownloadEPSOperationCompleted);
        }
        this.InvokeAsync("downloadEPS", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4}, this.downloadEPSOperationCompleted, userState);
    }
    
    private void OndownloadEPSOperationCompleted(object arg) {
        if ((this.downloadEPSCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.downloadEPSCompleted(this, new downloadEPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result", DataType="base64Binary")]
    public byte[] downloadJPEG(string String_1, string String_2, string String_3, string String_4, string String_5, string String_6) {
        object[] results = this.Invoke("downloadJPEG", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4,
                    String_5,
                    String_6});
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindownloadJPEG(string String_1, string String_2, string String_3, string String_4, string String_5, string String_6, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("downloadJPEG", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4,
                    String_5,
                    String_6}, callback, asyncState);
    }
    
    /// <remarks/>
    public byte[] EnddownloadJPEG(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public void downloadJPEGAsync(string String_1, string String_2, string String_3, string String_4, string String_5, string String_6) {
        this.downloadJPEGAsync(String_1, String_2, String_3, String_4, String_5, String_6, null);
    }
    
    /// <remarks/>
    public void downloadJPEGAsync(string String_1, string String_2, string String_3, string String_4, string String_5, string String_6, object userState) {
        if ((this.downloadJPEGOperationCompleted == null)) {
            this.downloadJPEGOperationCompleted = new System.Threading.SendOrPostCallback(this.OndownloadJPEGOperationCompleted);
        }
        this.InvokeAsync("downloadJPEG", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4,
                    String_5,
                    String_6}, this.downloadJPEGOperationCompleted, userState);
    }
    
    private void OndownloadJPEGOperationCompleted(object arg) {
        if ((this.downloadJPEGCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.downloadJPEGCompleted(this, new downloadJPEGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result", DataType="base64Binary")]
    public byte[] downloadSVG(string String_1, string String_2, string String_3, string String_4) {
        object[] results = this.Invoke("downloadSVG", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4});
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindownloadSVG(string String_1, string String_2, string String_3, string String_4, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("downloadSVG", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4}, callback, asyncState);
    }
    
    /// <remarks/>
    public byte[] EnddownloadSVG(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public void downloadSVGAsync(string String_1, string String_2, string String_3, string String_4) {
        this.downloadSVGAsync(String_1, String_2, String_3, String_4, null);
    }
    
    /// <remarks/>
    public void downloadSVGAsync(string String_1, string String_2, string String_3, string String_4, object userState) {
        if ((this.downloadSVGOperationCompleted == null)) {
            this.downloadSVGOperationCompleted = new System.Threading.SendOrPostCallback(this.OndownloadSVGOperationCompleted);
        }
        this.InvokeAsync("downloadSVG", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4}, this.downloadSVGOperationCompleted, userState);
    }
    
    private void OndownloadSVGOperationCompleted(object arg) {
        if ((this.downloadSVGCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.downloadSVGCompleted(this, new downloadSVGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result", DataType="base64Binary")]
    public byte[] downloadSound(string String_1, string String_2, string String_3, string String_4) {
        object[] results = this.Invoke("downloadSound", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4});
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindownloadSound(string String_1, string String_2, string String_3, string String_4, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("downloadSound", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4}, callback, asyncState);
    }
    
    /// <remarks/>
    public byte[] EnddownloadSound(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public void downloadSoundAsync(string String_1, string String_2, string String_3, string String_4) {
        this.downloadSoundAsync(String_1, String_2, String_3, String_4, null);
    }
    
    /// <remarks/>
    public void downloadSoundAsync(string String_1, string String_2, string String_3, string String_4, object userState) {
        if ((this.downloadSoundOperationCompleted == null)) {
            this.downloadSoundOperationCompleted = new System.Threading.SendOrPostCallback(this.OndownloadSoundOperationCompleted);
        }
        this.InvokeAsync("downloadSound", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4}, this.downloadSoundOperationCompleted, userState);
    }
    
    private void OndownloadSoundOperationCompleted(object arg) {
        if ((this.downloadSoundCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.downloadSoundCompleted(this, new downloadSoundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result", DataType="base64Binary")]
    public byte[] downloadWMF(string String_1, string String_2, string String_3, string String_4) {
        object[] results = this.Invoke("downloadWMF", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4});
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindownloadWMF(string String_1, string String_2, string String_3, string String_4, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("downloadWMF", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4}, callback, asyncState);
    }
    
    /// <remarks/>
    public byte[] EnddownloadWMF(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public void downloadWMFAsync(string String_1, string String_2, string String_3, string String_4) {
        this.downloadWMFAsync(String_1, String_2, String_3, String_4, null);
    }
    
    /// <remarks/>
    public void downloadWMFAsync(string String_1, string String_2, string String_3, string String_4, object userState) {
        if ((this.downloadWMFOperationCompleted == null)) {
            this.downloadWMFOperationCompleted = new System.Threading.SendOrPostCallback(this.OndownloadWMFOperationCompleted);
        }
        this.InvokeAsync("downloadWMF", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4}, this.downloadWMFOperationCompleted, userState);
    }
    
    private void OndownloadWMFOperationCompleted(object arg) {
        if ((this.downloadWMFCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.downloadWMFCompleted(this, new downloadWMFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public string[] getAvailableAnimations(string String_1, string String_2) {
        object[] results = this.Invoke("getAvailableAnimations", new object[] {
                    String_1,
                    String_2});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAvailableAnimations(string String_1, string String_2, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAvailableAnimations", new object[] {
                    String_1,
                    String_2}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetAvailableAnimations(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getAvailableAnimationsAsync(string String_1, string String_2) {
        this.getAvailableAnimationsAsync(String_1, String_2, null);
    }
    
    /// <remarks/>
    public void getAvailableAnimationsAsync(string String_1, string String_2, object userState) {
        if ((this.getAvailableAnimationsOperationCompleted == null)) {
            this.getAvailableAnimationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAvailableAnimationsOperationCompleted);
        }
        this.InvokeAsync("getAvailableAnimations", new object[] {
                    String_1,
                    String_2}, this.getAvailableAnimationsOperationCompleted, userState);
    }
    
    private void OngetAvailableAnimationsOperationCompleted(object arg) {
        if ((this.getAvailableAnimationsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAvailableAnimationsCompleted(this, new getAvailableAnimationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public string[] getAvailableLocales(string String_1, string String_2) {
        object[] results = this.Invoke("getAvailableLocales", new object[] {
                    String_1,
                    String_2});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAvailableLocales(string String_1, string String_2, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAvailableLocales", new object[] {
                    String_1,
                    String_2}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetAvailableLocales(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getAvailableLocalesAsync(string String_1, string String_2) {
        this.getAvailableLocalesAsync(String_1, String_2, null);
    }
    
    /// <remarks/>
    public void getAvailableLocalesAsync(string String_1, string String_2, object userState) {
        if ((this.getAvailableLocalesOperationCompleted == null)) {
            this.getAvailableLocalesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAvailableLocalesOperationCompleted);
        }
        this.InvokeAsync("getAvailableLocales", new object[] {
                    String_1,
                    String_2}, this.getAvailableLocalesOperationCompleted, userState);
    }
    
    private void OngetAvailableLocalesOperationCompleted(object arg) {
        if ((this.getAvailableLocalesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAvailableLocalesCompleted(this, new getAvailableLocalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public string[] getAvailableSounds(string String_1, string String_2) {
        object[] results = this.Invoke("getAvailableSounds", new object[] {
                    String_1,
                    String_2});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAvailableSounds(string String_1, string String_2, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAvailableSounds", new object[] {
                    String_1,
                    String_2}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetAvailableSounds(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getAvailableSoundsAsync(string String_1, string String_2) {
        this.getAvailableSoundsAsync(String_1, String_2, null);
    }
    
    /// <remarks/>
    public void getAvailableSoundsAsync(string String_1, string String_2, object userState) {
        if ((this.getAvailableSoundsOperationCompleted == null)) {
            this.getAvailableSoundsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAvailableSoundsOperationCompleted);
        }
        this.InvokeAsync("getAvailableSounds", new object[] {
                    String_1,
                    String_2}, this.getAvailableSoundsOperationCompleted, userState);
    }
    
    private void OngetAvailableSoundsOperationCompleted(object arg) {
        if ((this.getAvailableSoundsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAvailableSoundsCompleted(this, new getAvailableSoundsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public string[] getAvailableSoundsByLocale(string String_1, string String_2, string String_3) {
        object[] results = this.Invoke("getAvailableSoundsByLocale", new object[] {
                    String_1,
                    String_2,
                    String_3});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAvailableSoundsByLocale(string String_1, string String_2, string String_3, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAvailableSoundsByLocale", new object[] {
                    String_1,
                    String_2,
                    String_3}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetAvailableSoundsByLocale(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getAvailableSoundsByLocaleAsync(string String_1, string String_2, string String_3) {
        this.getAvailableSoundsByLocaleAsync(String_1, String_2, String_3, null);
    }
    
    /// <remarks/>
    public void getAvailableSoundsByLocaleAsync(string String_1, string String_2, string String_3, object userState) {
        if ((this.getAvailableSoundsByLocaleOperationCompleted == null)) {
            this.getAvailableSoundsByLocaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAvailableSoundsByLocaleOperationCompleted);
        }
        this.InvokeAsync("getAvailableSoundsByLocale", new object[] {
                    String_1,
                    String_2,
                    String_3}, this.getAvailableSoundsByLocaleOperationCompleted, userState);
    }
    
    private void OngetAvailableSoundsByLocaleOperationCompleted(object arg) {
        if ((this.getAvailableSoundsByLocaleCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAvailableSoundsByLocaleCompleted(this, new getAvailableSoundsByLocaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public string[] getEnglishLanguageNames(string String_1, string String_2) {
        object[] results = this.Invoke("getEnglishLanguageNames", new object[] {
                    String_1,
                    String_2});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetEnglishLanguageNames(string String_1, string String_2, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getEnglishLanguageNames", new object[] {
                    String_1,
                    String_2}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetEnglishLanguageNames(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getEnglishLanguageNamesAsync(string String_1, string String_2) {
        this.getEnglishLanguageNamesAsync(String_1, String_2, null);
    }
    
    /// <remarks/>
    public void getEnglishLanguageNamesAsync(string String_1, string String_2, object userState) {
        if ((this.getEnglishLanguageNamesOperationCompleted == null)) {
            this.getEnglishLanguageNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEnglishLanguageNamesOperationCompleted);
        }
        this.InvokeAsync("getEnglishLanguageNames", new object[] {
                    String_1,
                    String_2}, this.getEnglishLanguageNamesOperationCompleted, userState);
    }
    
    private void OngetEnglishLanguageNamesOperationCompleted(object arg) {
        if ((this.getEnglishLanguageNamesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getEnglishLanguageNamesCompleted(this, new getEnglishLanguageNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public string getJpegUrl(string String_1, string String_2, string String_3, string String_4, string String_5) {
        object[] results = this.Invoke("getJpegUrl", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4,
                    String_5});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetJpegUrl(string String_1, string String_2, string String_3, string String_4, string String_5, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getJpegUrl", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4,
                    String_5}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetJpegUrl(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getJpegUrlAsync(string String_1, string String_2, string String_3, string String_4, string String_5) {
        this.getJpegUrlAsync(String_1, String_2, String_3, String_4, String_5, null);
    }
    
    /// <remarks/>
    public void getJpegUrlAsync(string String_1, string String_2, string String_3, string String_4, string String_5, object userState) {
        if ((this.getJpegUrlOperationCompleted == null)) {
            this.getJpegUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJpegUrlOperationCompleted);
        }
        this.InvokeAsync("getJpegUrl", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4,
                    String_5}, this.getJpegUrlOperationCompleted, userState);
    }
    
    private void OngetJpegUrlOperationCompleted(object arg) {
        if ((this.getJpegUrlCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getJpegUrlCompleted(this, new getJpegUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public string[] getJpegUrlsByLocale(string String_1, string String_2, string String_3, string String_4) {
        object[] results = this.Invoke("getJpegUrlsByLocale", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetJpegUrlsByLocale(string String_1, string String_2, string String_3, string String_4, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getJpegUrlsByLocale", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetJpegUrlsByLocale(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getJpegUrlsByLocaleAsync(string String_1, string String_2, string String_3, string String_4) {
        this.getJpegUrlsByLocaleAsync(String_1, String_2, String_3, String_4, null);
    }
    
    /// <remarks/>
    public void getJpegUrlsByLocaleAsync(string String_1, string String_2, string String_3, string String_4, object userState) {
        if ((this.getJpegUrlsByLocaleOperationCompleted == null)) {
            this.getJpegUrlsByLocaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJpegUrlsByLocaleOperationCompleted);
        }
        this.InvokeAsync("getJpegUrlsByLocale", new object[] {
                    String_1,
                    String_2,
                    String_3,
                    String_4}, this.getJpegUrlsByLocaleOperationCompleted, userState);
    }
    
    private void OngetJpegUrlsByLocaleOperationCompleted(object arg) {
        if ((this.getJpegUrlsByLocaleCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getJpegUrlsByLocaleCompleted(this, new getJpegUrlsByLocaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public string[] getNativeLanguageNames(string String_1, string String_2) {
        object[] results = this.Invoke("getNativeLanguageNames", new object[] {
                    String_1,
                    String_2});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetNativeLanguageNames(string String_1, string String_2, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getNativeLanguageNames", new object[] {
                    String_1,
                    String_2}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetNativeLanguageNames(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getNativeLanguageNamesAsync(string String_1, string String_2) {
        this.getNativeLanguageNamesAsync(String_1, String_2, null);
    }
    
    /// <remarks/>
    public void getNativeLanguageNamesAsync(string String_1, string String_2, object userState) {
        if ((this.getNativeLanguageNamesOperationCompleted == null)) {
            this.getNativeLanguageNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNativeLanguageNamesOperationCompleted);
        }
        this.InvokeAsync("getNativeLanguageNames", new object[] {
                    String_1,
                    String_2}, this.getNativeLanguageNamesOperationCompleted, userState);
    }
    
    private void OngetNativeLanguageNamesOperationCompleted(object arg) {
        if ((this.getNativeLanguageNamesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getNativeLanguageNamesCompleted(this, new getNativeLanguageNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public string[] getPictogramNames(string String_1, string String_2) {
        object[] results = this.Invoke("getPictogramNames", new object[] {
                    String_1,
                    String_2});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetPictogramNames(string String_1, string String_2, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getPictogramNames", new object[] {
                    String_1,
                    String_2}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetPictogramNames(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getPictogramNamesAsync(string String_1, string String_2) {
        this.getPictogramNamesAsync(String_1, String_2, null);
    }
    
    /// <remarks/>
    public void getPictogramNamesAsync(string String_1, string String_2, object userState) {
        if ((this.getPictogramNamesOperationCompleted == null)) {
            this.getPictogramNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPictogramNamesOperationCompleted);
        }
        this.InvokeAsync("getPictogramNames", new object[] {
                    String_1,
                    String_2}, this.getPictogramNamesOperationCompleted, userState);
    }
    
    private void OngetPictogramNamesOperationCompleted(object arg) {
        if ((this.getPictogramNamesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getPictogramNamesCompleted(this, new getPictogramNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public string[] getPictogramPhrasesByLocale(string String_1, string String_2, string String_3) {
        object[] results = this.Invoke("getPictogramPhrasesByLocale", new object[] {
                    String_1,
                    String_2,
                    String_3});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetPictogramPhrasesByLocale(string String_1, string String_2, string String_3, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getPictogramPhrasesByLocale", new object[] {
                    String_1,
                    String_2,
                    String_3}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetPictogramPhrasesByLocale(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getPictogramPhrasesByLocaleAsync(string String_1, string String_2, string String_3) {
        this.getPictogramPhrasesByLocaleAsync(String_1, String_2, String_3, null);
    }
    
    /// <remarks/>
    public void getPictogramPhrasesByLocaleAsync(string String_1, string String_2, string String_3, object userState) {
        if ((this.getPictogramPhrasesByLocaleOperationCompleted == null)) {
            this.getPictogramPhrasesByLocaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPictogramPhrasesByLocaleOperationCompleted);
        }
        this.InvokeAsync("getPictogramPhrasesByLocale", new object[] {
                    String_1,
                    String_2,
                    String_3}, this.getPictogramPhrasesByLocaleOperationCompleted, userState);
    }
    
    private void OngetPictogramPhrasesByLocaleOperationCompleted(object arg) {
        if ((this.getPictogramPhrasesByLocaleCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getPictogramPhrasesByLocaleCompleted(this, new getPictogramPhrasesByLocaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public string[] getSwedishLanguageNames() {
        object[] results = this.Invoke("getSwedishLanguageNames", new object[0]);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetSwedishLanguageNames(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getSwedishLanguageNames", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetSwedishLanguageNames(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getSwedishLanguageNamesAsync() {
        this.getSwedishLanguageNamesAsync(null);
    }
    
    /// <remarks/>
    public void getSwedishLanguageNamesAsync(object userState) {
        if ((this.getSwedishLanguageNamesOperationCompleted == null)) {
            this.getSwedishLanguageNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSwedishLanguageNamesOperationCompleted);
        }
        this.InvokeAsync("getSwedishLanguageNames", new object[0], this.getSwedishLanguageNamesOperationCompleted, userState);
    }
    
    private void OngetSwedishLanguageNamesOperationCompleted(object arg) {
        if ((this.getSwedishLanguageNamesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getSwedishLanguageNamesCompleted(this, new getSwedishLanguageNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public string[] getSwedishLanguageNames2(string String_1, string String_2) {
        object[] results = this.Invoke("getSwedishLanguageNames2", new object[] {
                    String_1,
                    String_2});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetSwedishLanguageNames2(string String_1, string String_2, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getSwedishLanguageNames2", new object[] {
                    String_1,
                    String_2}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetSwedishLanguageNames2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getSwedishLanguageNames2Async(string String_1, string String_2) {
        this.getSwedishLanguageNames2Async(String_1, String_2, null);
    }
    
    /// <remarks/>
    public void getSwedishLanguageNames2Async(string String_1, string String_2, object userState) {
        if ((this.getSwedishLanguageNames2OperationCompleted == null)) {
            this.getSwedishLanguageNames2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSwedishLanguageNames2OperationCompleted);
        }
        this.InvokeAsync("getSwedishLanguageNames2", new object[] {
                    String_1,
                    String_2}, this.getSwedishLanguageNames2OperationCompleted, userState);
    }
    
    private void OngetSwedishLanguageNames2OperationCompleted(object arg) {
        if ((this.getSwedishLanguageNames2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getSwedishLanguageNames2Completed(this, new getSwedishLanguageNames2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.pictosys.com/WebService", ResponseNamespace="http://www.pictosys.com/WebService")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public bool verifyLogin(string String_1, string String_2) {
        object[] results = this.Invoke("verifyLogin", new object[] {
                    String_1,
                    String_2});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginverifyLogin(string String_1, string String_2, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("verifyLogin", new object[] {
                    String_1,
                    String_2}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndverifyLogin(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void verifyLoginAsync(string String_1, string String_2) {
        this.verifyLoginAsync(String_1, String_2, null);
    }
    
    /// <remarks/>
    public void verifyLoginAsync(string String_1, string String_2, object userState) {
        if ((this.verifyLoginOperationCompleted == null)) {
            this.verifyLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnverifyLoginOperationCompleted);
        }
        this.InvokeAsync("verifyLogin", new object[] {
                    String_1,
                    String_2}, this.verifyLoginOperationCompleted, userState);
    }
    
    private void OnverifyLoginOperationCompleted(object arg) {
        if ((this.verifyLoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.verifyLoginCompleted(this, new verifyLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void downloadAnimationCompletedEventHandler(object sender, downloadAnimationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class downloadAnimationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal downloadAnimationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public byte[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void downloadEMFCompletedEventHandler(object sender, downloadEMFCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class downloadEMFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal downloadEMFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public byte[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void downloadEPSCompletedEventHandler(object sender, downloadEPSCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class downloadEPSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal downloadEPSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public byte[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void downloadJPEGCompletedEventHandler(object sender, downloadJPEGCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class downloadJPEGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal downloadJPEGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public byte[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void downloadSVGCompletedEventHandler(object sender, downloadSVGCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class downloadSVGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal downloadSVGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public byte[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void downloadSoundCompletedEventHandler(object sender, downloadSoundCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class downloadSoundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal downloadSoundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public byte[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void downloadWMFCompletedEventHandler(object sender, downloadWMFCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class downloadWMFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal downloadWMFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public byte[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getAvailableAnimationsCompletedEventHandler(object sender, getAvailableAnimationsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAvailableAnimationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAvailableAnimationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getAvailableLocalesCompletedEventHandler(object sender, getAvailableLocalesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAvailableLocalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAvailableLocalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getAvailableSoundsCompletedEventHandler(object sender, getAvailableSoundsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAvailableSoundsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAvailableSoundsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getAvailableSoundsByLocaleCompletedEventHandler(object sender, getAvailableSoundsByLocaleCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAvailableSoundsByLocaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAvailableSoundsByLocaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getEnglishLanguageNamesCompletedEventHandler(object sender, getEnglishLanguageNamesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getEnglishLanguageNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getEnglishLanguageNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getJpegUrlCompletedEventHandler(object sender, getJpegUrlCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getJpegUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getJpegUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getJpegUrlsByLocaleCompletedEventHandler(object sender, getJpegUrlsByLocaleCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getJpegUrlsByLocaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getJpegUrlsByLocaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getNativeLanguageNamesCompletedEventHandler(object sender, getNativeLanguageNamesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getNativeLanguageNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getNativeLanguageNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getPictogramNamesCompletedEventHandler(object sender, getPictogramNamesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getPictogramNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getPictogramNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getPictogramPhrasesByLocaleCompletedEventHandler(object sender, getPictogramPhrasesByLocaleCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getPictogramPhrasesByLocaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getPictogramPhrasesByLocaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getSwedishLanguageNamesCompletedEventHandler(object sender, getSwedishLanguageNamesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getSwedishLanguageNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getSwedishLanguageNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getSwedishLanguageNames2CompletedEventHandler(object sender, getSwedishLanguageNames2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getSwedishLanguageNames2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getSwedishLanguageNames2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void verifyLoginCompletedEventHandler(object sender, verifyLoginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class verifyLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal verifyLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}
